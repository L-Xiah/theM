
####Nginx代理服务器####
1》web服务器
2》负载均衡服务器
3》代理服务器（邮件/反向代理）

注：该工具打开后没有页面，且其不能放置在包含中文路径下使用；

nginx：反向代理服务器，将内部部署的不同项目代理成统一域名
在nginx.conf中进行配置


命令：
nginx -s stop
nginx -s quit
nginx -s reload (- 重新加载配置文件)
nginx -s reopen (- 重新打开日志文件)


nginx.conf配置:
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    # '$status $body_bytes_sent "$http_referer" '
    # '"$http_user_agent" "$http_x_forwarded_for"';
    #access_log  logs/access.log  main;
    sendfile        on;
    #tcp_nopush     on;
    #keepalive_timeout  0;
    keepalive_timeout  65;
    #gzip  on;

    ## 新服务(静态网站)
    server {
        location / {
            root /data/www;
        }
        location /images/ {
            root /data;
        }
    }
}


####负载均衡####


1》服务器群配置
upstream load_balance_server {
		#weigth参数表示权值，权值越高被分配到的几率越大
        server localhost:7085   weight=5;
        server localhost:7086   weight=1;
        server localhost:7087   weight=6;
    }
2》均衡策略
	weight、最少连接、IP Hash等
3》主服务及转向
	location / {
            proxy_pass  http://load_balance_server ;#请求转向load_balance_server 定义的服务器列表
            }



eg：
#user  nobody;
worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    access_log  logs/access.logs;
    
    upstream load_balance_server {
		#weigth参数表示权值，权值越高被分配到的几率越大
        server localhost:7085   weight=5;
        server localhost:7086   weight=1;
        server localhost:7087   weight=6;
    }



    server {
        listen       80;
        server_name  localhost;	#定义使用www.xx.com访问

        location / {
            root   /root;
            index  index.html index.htm;
            proxy_pass  http://load_balance_server ;#请求转向load_balance_server 定义的服务器列表
            
            
            #以下是一些反向代理的配置(可选择性配置)
            #proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            #后端的Web服务器可以通过X-Forwarded-For获取用户真实IP
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_connect_timeout 90;          #nginx跟后端服务器连接超时时间(代理连接超时)
            proxy_send_timeout 90;             #后端服务器数据回传时间(代理发送超时)
            proxy_read_timeout 90;             #连接成功后，后端服务器响应时间(代理接收超时)
            proxy_buffer_size 4k;              #设置代理服务器（nginx）保存用户头信息的缓冲区大小
            proxy_buffers 4 32k;               #proxy_buffers缓冲区，网页平均在32k以下的话，这样设置
            proxy_busy_buffers_size 64k;       #高负荷下缓冲大小（proxy_buffers*2）
            proxy_temp_file_write_size 64k;    #设定缓存文件夹大小，大于这个值，将从upstream服务器传

            client_max_body_size 10m;          #允许客户端请求的最大单文件字节数
            client_body_buffer_size 128k;      #缓冲区代理缓冲用户端请求的最大字节数
            
        }

    }

}


####代理服务器####

代理模式：
用户--》代理服务器--》目标服务器

正向代理：用户通过代理服务器访问互联网目标资源/服务（VPN）
反向代理：互联网请求通过内部资源时，通过代理服务器访问内部目标服务



