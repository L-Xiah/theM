#########工程构建###########
每个函数都要写注释/文档（时间占比不少,任意开发人员都能看懂）


####变量/函数/类命名####
总体原则-〉驼峰法
对仗命名
add/remove		
begin/end
create/destory		
first/last				
get/put/set			
increment/decrement
insert/delete	
input/output
in/out
left/right
lock/unlock
min/max
next/previous
old/new
open/close		
show/hide
source/target
start/stop
up/down


一、变量
1〉范围_类型_功能/抽象物
	范围-〉(temp函数内，the全局性，fun函数变量)
	类型-〉Int、String、Object、Arr	
	功能-〉动词	
	tempIntIni
	theStringState
	funObjectBox
2〉循环变量：i、j、k、l、m、n
3〉Boolean变量：initIsTrue、openIsTrue、stateIsTrue

二、函数方法
1〉函数不限定在类中：
	返回类型 + "_" + 功能(动词+宾语)
	void_PrintDocument
2〉函数在类中：
	返回类型 + "_" + 功能(动词-〉类为函数作用的对象)
	void_Sum

三、类
1〉"C/..." + 抽象物（名词）
	CHomeController



####面向对象####
类的抽象特性要好。

面向三大特性：封装、继承、多态。
封装：只显示对外接口，将具体实现/属性封装在内部。
继承：可继承父类的接口、属性等，然后实现扩展。
多态：重载/重写方法；对象的向上/向下转型（父类实例转子类实例，或反之）。


####Cookie/Seesion####
Cookie->浏览器客户端存储用户信息等（Cookie具有不可跨域名性域名相关）
Seesion->服务器内存中存储用户信息

####序列化/####
序列化
将内存中的变量/对象保存到可存储或可传输的过程称之为序列化（serialization、marshalling、flattening）
序列化的标准格式-〉xml、json
将对象转为字节序列（字节流）的过程-〉序列化
将字节序列（字节流）恢复为对象的过程-〉反序列化

持久化
将程序数据在持久状态(保存到外存、硬盘中)和瞬时状态（取回到内存中）之间转换的机制。
（JDBC、文件IO都是一种持久化机制）
保存和取回的过程是通过序列化和对象IO来完成的。
数据的持久化是序列化的一个典型应用，对象只有在序列化之后才能进行持久化存储，从持久化存储介质中加载数据再通过反序列化传出运行时对象。



